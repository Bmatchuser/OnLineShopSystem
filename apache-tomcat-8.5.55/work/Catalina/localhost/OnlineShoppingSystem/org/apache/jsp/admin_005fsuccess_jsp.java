/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.55
 * Generated at: 2021-05-15 00:10:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class admin_005fsuccess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/JspStudy/apache-tomcat-8.5.55/webapps/OnlineShoppingSystem/WEB-INF/lib/jstl-impl.jar!/META-INF/c.tld", Long.valueOf(1274158294000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl.jar", Long.valueOf(1620971542920L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->\r\n");
      out.write("    <title>登陆成功</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap -->\t\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write(" \r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    \tbody{\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\tmargin: auto;\r\n");
      out.write("    \t}\r\n");
      out.write("\r\n");
      out.write("\t\tcaption,th,td{\r\n");
      out.write("\t\t\ttext-align: center;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</style>\r\n");
      out.write(" \t<script type=\"text/javascript\">\r\n");
      out.write(" \t\tfunction deleteUser(id){\r\n");
      out.write(" \t\t\tif(confirm(\"你确定要删除吗！\"))\r\n");
      out.write(" \t\t\t{\r\n");
      out.write(" \t\t\tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/servlet/delUserServlet?id=\"+id;\r\n");
      out.write(" \t\t\t}\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\twindow.onload = function(){\r\n");
      out.write(" \t\t\t//给删除选中按钮添加单击事件\r\n");
      out.write(" \t\t\tdocument.getElementById(\"deleteSelect\").onclick = function(){\r\n");
      out.write(" \t\t\t\tif(confirm(\"你确定要删除吗？\")){\r\n");
      out.write(" \t\t\t\t\tflag=false;\r\n");
      out.write(" \t\t\t\t\tvar cbs = document.getElementsByName(\"checkId\");\r\n");
      out.write(" \t\t\t\t\tfor ( var i = 0; i < cbs.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tif(cbs[i].checked){\r\n");
      out.write("\t\t\t\t\t\t\tflag=true;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(flag){\r\n");
      out.write("\t\t\t\t\t\tdocument.getElementById(\"form\").submit();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write(" \t\t\t\t \t\r\n");
      out.write(" \t\t\t\t}\r\n");
      out.write(" \t\t\t}\r\n");
      out.write(" \t\t\t//给全选按钮添加单击事件\r\n");
      out.write(" \t\t\tdocument.getElementById(\"firstCheckBox\").onclick = function(){\r\n");
      out.write(" \t\t\t//获取所有的checkbox\r\n");
      out.write(" \t\t\tvar cbs = document.getElementsByName(\"checkId\");\r\n");
      out.write(" \t\t\t//循环使所有的checkBox的状态都和firstCheckBox的状态一样\r\n");
      out.write(" \t\t\tfor ( var i = 0; i < cbs.length; i++) {\r\n");
      out.write("\t\t\t\tcbs[i].checked = this.checked;\r\n");
      out.write("\t\t\t}\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t</script>\r\n");
      out.write("  </head>\r\n");
      out.write("\t\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"col-lg-2\" style=\"height: 600px;background-color: #1c232f\">\r\n");
      out.write("  \t\t\t<div class=\"text-center\" style=\"height: 50px; line-height: 50px;\">\r\n");
      out.write("  \t\t\t\t<a href=\"#\" style=\"text-decoration: none;color: white; display: block;\">\r\n");
      out.write("  \t\t\t\t\t管理员后台\r\n");
      out.write("  \t\t\t\t</a>\r\n");
      out.write("  \t\t\t</div>\r\n");
      out.write("  \t\t\t<div class=\"row\">\r\n");
      out.write("  \t\t\t\t<div style=\"height: 1px;background-color: black;width: 100%;\"></div>\r\n");
      out.write("  \t\t\t</div>\r\n");
      out.write("  \t\t\t<div class=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n");
      out.write("\t\t  <div class=\"panel panel-default\">\r\n");
      out.write("\t\t    <div  class=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n");
      out.write("\t\t        <a style=\"font-size: large; margin-left: 40px\" class=\"collapsed\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/servlet/PCIListServlet\">\r\n");
      out.write("\t\t      \t\t   商品管理\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  <div class=\"panel panel-default\">\r\n");
      out.write("\t\t     <div  class=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n");
      out.write("\t\t        <a style=\"font-size: large; margin-left: 40px\" class=\"collapsed\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/servlet/GetUserByPageServlet\" >\r\n");
      out.write("\t\t      \t\t   会员管理\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  <div class=\"panel panel-default\">\r\n");
      out.write("\t\t     <div  class=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n");
      out.write("\t\t        <a style=\"font-size: large; margin-left: 40px\" class=\"collapsed\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/servlet/OrderListServlet\" >\r\n");
      out.write("\t\t      \t\t   订单管理\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  <div class=\"panel panel-default\">\r\n");
      out.write("\t\t     <div  class=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n");
      out.write("\t\t        <a style=\"font-size: large; margin-left: 40px\" class=\"collapsed\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/servlet/SupplierListServlet\" >\r\n");
      out.write("\t\t      \t\t   货源管理\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t\t\t\t    ");
      out.write("\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t\r\n");
      out.write("  \t<div class=\"col-lg-10\" style=\"height: 600px;background-color: white\">\t\r\n");
      out.write("\t  \t<img src=\"images/welcome.png\" width=100% height=100% border=\"1\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("  </body>\r\n");
      out.write("  <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"></script>\r\n");
      out.write("    <!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
